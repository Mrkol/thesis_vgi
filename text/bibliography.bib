@inproceedings{niski2007multi,
	title={Multi-grained level of detail using a hierarchical seamless texture atlas},
	author={Niski, Krzysztof and Purnomo, Budirijanto and Cohen, Jonathan},
	booktitle={Proceedings of the 2007 symposium on Interactive 3D graphics and games},
	pages={153--160},
	year={2007}
}

@article{tutte1963,
author = {Tutte, W. T.},
title = {How to Draw a Graph},
journal = {Proceedings of the London Mathematical Society},
volume = {s3-13},
number = {1},
pages = {743-767},
doi = {https://doi.org/10.1112/plms/s3-13.1.743},
url = {https://londmathsoc.onlinelibrary.wiley.com/doi/abs/10.1112/plms/s3-13.1.743},
eprint = {https://londmathsoc.onlinelibrary.wiley.com/doi/pdf/10.1112/plms/s3-13.1.743},
year = {1963}
}

@inproceedings{garland2001,
author = {Garland, Michael and Willmott, Andrew and Heckbert, Paul S.},
title = {Hierarchical Face Clustering on Polygonal Surfaces},
year = {2001},
isbn = {1581132921},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/364338.364345},
doi = {10.1145/364338.364345},
booktitle = {Proceedings of the 2001 Symposium on Interactive 3D Graphics},
pages = {49–58},
numpages = {10},
keywords = {dual contraction, face clusters, spatial data structures, quadric error metrics, surface simplification},
series = {I3D '01}
}

@inproceedings{sander2001,
author = {Sander, Pedro V. and Snyder, John and Gortler, Steven J. and Hoppe, Hugues},
title = {Texture Mapping Progressive Meshes},
year = {2001},
isbn = {158113374X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/383259.383307},
doi = {10.1145/383259.383307},
abstract = {Given an arbitrary mesh, we present a method to construct a progressive mesh (PM) such that all meshes in the PM sequence share a common texture parametrization. Our method considers two important goals simultaneously. It minimizes texture stretch (small texture distances mapped onto large surface distances) to balance sampling rates over all locations and directions on the surface. It also minimizes texture deviation (“slippage” error based on parametric correspondence) to obtain accurate textured mesh approximations. The method begins by partitioning the mesh into charts using planarity and compactness heuristics. It creates a stretch-minimizing parametrization within each chart, and resizes the charts based on the resulting stretch. Next, it simplifies the mesh while respecting the chart boundaries. The parametrization is re-optimized to reduce both stretch and deviation over the whole PM sequence. Finally, the charts are packed into a texture atlas. We demonstrate using such atlases to sample color and normal maps over several models.},
booktitle = {Proceedings of the 28th Annual Conference on Computer Graphics and Interactive Techniques},
pages = {409–416},
numpages = {8},
keywords = {texture stretch, surface parametrization, surface flattening, mesh simplification},
series = {SIGGRAPH '01}
}

@inproceedings{purnomo2004,
author = {Purnomo, Budirijanto and Cohen, Jonathan and Kumar, Subodh},
year = {2004},
month = {01},
pages = {67-76},
title = {Seamless Texture Atlases.},
volume = {71},
journal = {ACM International Conference Proceeding Series},
doi = {10.1145/1057432.1057441}
}

@article{RIPOLLES2009184,
title = "Rendering continuous level-of-detail meshes by Masking Strips",
journal = "Graphical Models",
volume = "71",
number = "5",
pages = "184 - 195",
year = "2009",
issn = "1524-0703",
doi = "https://doi.org/10.1016/j.gmod.2009.05.002",
url = "http://www.sciencedirect.com/science/article/pii/S152407030900023X",
author = "Oscar Ripolles and Miguel Chover and Jesus Gumbau and Francisco Ramos and Anna Puig-Centelles",
keywords = "Computer graphics, Multiresolution models, Level-of-detail, Triangle strips, Simplification",
abstract = "In this paper we present a new continuous multiresolution approach which has been developed for the interactive visualization of meshes in real-time applications. Our interest is to offer an efficient solution which considers submeshes, textures, normals and bones for skeletal animations. The model has been designed to give view-independent continuous levels-of-detail and uses triangle strips for exploiting vertex cache and coherence for minimizing bus traffic. Furthermore, its data structures allow for an efficient extraction process where all unnecessary information is eliminated and also for progressive transmission. A new simplification strategy has also been developed, which preserves appearance and attributes. In the results section we present different images to show the visual quality obtained with this simplification method, as well as a study of the storage and rendering costs."
}

@incollection{ref,
	author = {Michael Bunnell},
	title = {Adaptive Tessellation of Subdivision Surfaces with Displacement Mapping},
	booktitle = {GPU Gems 2},
	editor = {Matt Pharr},
	publisher = {Addison-Wesley},
	year = {2005},
	pages = {109--122}
}

@article{feng2010feature,
	title={Feature-preserving triangular geometry images for level-of-detail representation of static and skinned meshes},
	author={Feng, Wei-Wen and Kim, Byung-Uck and Yu, Yizhou and Peng, Liang and Hart, John},
	journal={ACM Transactions on Graphics (TOG)},
	volume={29},
	number={2},
	pages={1--13},
	year={2010},
	publisher={ACM New York, NY, USA}
}

@online{graphicrants_vgi,
	author = {Brian Karis},
	title = {Virtual Geometry Images},
	year = 2009,
	url = {http://graphicrants.blogspot.com/2009/01/virtual-geometry-images.html},
	urldate = {2020-12-13}
}

@online{graphicrants_moregeometry,
	author = {Brian Karis},
	title = {More Geometry},
	year = 2009,
	url = {http://graphicrants.blogspot.com/2009/01/more-geometry.html},
	urldate = {2020-12-13}
}

@unpublished{cur_and_next_parallelism,
	title= {Current and Next Generation Parallelism in Games},
	author = {Jon Olick},
	year = {2008},
	note = {SIGGRAPH},
}

@software{ue5,
  author = {{Epic Games, Inc.}},
  title = {Unreal Engine},
  url = {https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5},
  version = {5},
  date = {2020-12-14},
}

@software{nanite,
  author = {{Epic Games, Inc.}},
  title = {Nanite Technology},
  url = {https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5},
  date = {2020-12-14},
}


@online{quixel_megascans,
	author = {{Epic Games, Inc.}},
	title = {Quixel Megascans},
	url = {https://quixel.com/megascans},
	urldate = {2021-05-27}
}

@article{normalmapping,
author = {Blinn, James F.},
title = {Simulation of Wrinkled Surfaces},
year = {1978},
issue_date = {August 1978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {3},
issn = {0097-8930},
url = {https://doi.org/10.1145/965139.507101},
doi = {10.1145/965139.507101},
abstract = {Computer generated shaded images have reached an impressive degree of realism with the current state of the art. They are not so realistic, however, that they would fool many people into believing they are real. One problem is that the surfaces tend to look artificial due to their extreme smoothness. What is needed is a means of simulating the surface irregularities that are on real surfaces. In 1973 Ed Catmull introduced the idea of using the parameter values of parametrically defined surfaces to index into a texture definition function which scales the intensity of the reflected light. By tying the texture pattern to the parameter values, the texture is guaranteed to rotate and move with the object. This is good for showing patterns painted on the surface, but attempts to simulate rough surfaces in this way are unconvincing. This paper presents a method of using a texturing function to perform a small perturbation on the direction of the surface normal before using it in the intensity calculations. This process yields images with realistic looking surface wrinkles without the need to model each wrinkle as a separate surface element. Several samples of images made with this technique are included.},
journal = {SIGGRAPH Comput. Graph.},
month = aug,
pages = {286–292},
numpages = {7}
}

@inproceedings{reliefmapping,
author = {Policarpo, F\'{a}bio and Oliveira, Manuel M. and Comba, Jo\~{a}o L. D.},
title = {Real-Time Relief Mapping on Arbitrary Polygonal Surfaces},
year = {2005},
isbn = {1595930132},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1053427.1053453},
doi = {10.1145/1053427.1053453},
abstract = {This paper presents a technique for mapping relief textures onto arbitrary polygonal models in real time. In this approach, the mapping of the relief data is done in tangent space. As a result, it can be applied to polygonal representations of curved surfaces producing correct self-occlusions, interpenetrations, shadows and per-pixel lighting effects. The approach can be used to consistently add surface details to geometric models undergoing deformations, such as in the case of animated characters commonly found in games. The technique uses an inverse formulation (i.e., pixel driven) based on an efficient ray-height-field intersection algorithm implemented on the GPU. It supports extreme close-up views of the surfaces, mip mapping and anisotropic texture filtering. Also, contrary to high-dimensional representations of surface details, the low memory requirements of the proposed technique do not restrict its use to tiled textures.},
booktitle = {Proceedings of the 2005 Symposium on Interactive 3D Graphics and Games},
pages = {155–162},
numpages = {8},
keywords = {motion parallax, relief mapping, real-time rendering, surface details, image-based rendering},
location = {Washington, District of Columbia},
series = {I3D '05}
}

@article{displacementmapping,
author = {Szirmay-Kalos, László and Umenhoffer, Tamás},
title = {Displacement Mapping on the GPU — State of the Art},
journal = {Computer Graphics Forum},
volume = {27},
number = {6},
pages = {1567-1592},
keywords = {Displacement Mapping, Tangent space, Direct3D 9 and 10, HLSL, Silhoucttes, Self shadowing, GPU, 1.3.7 Three-Dimensional Graphics and Realism},
doi = {https://doi.org/10.1111/j.1467-8659.2007.01108.x},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2007.01108.x},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2007.01108.x},
abstract = {Abstract This paper reviews the latest developments of displacement mapping algorithms implemented on the vertex, geometry, and fragment shaders of graphics cards. Displacement mapping algorithms are classified as per-vertex and per-pixel methods. Per-pixel approaches are further categorized as safe algorithms that aim at correct solutions in all cases, to unsafe techniques that may fail in extreme cases but are usually much faster than safe algorithms, and to combined methods that exploit the robustness of safe and the speed of unsafe techniques. We discuss the possible roles of vertex, geometry and fragment shaders to implement these algorithms. Then the particular GPU-based bump, parallax, relief, sphere, horizon mapping, cone stepping, local ray tracing, pyramidal and view-dependent displacement mapping methods, as well as their numerous variations are reviewed providing also implementation details of the shader programs. We present these methods using uniform notations and also point out when different authors called similar concepts differently. In addition to basic displacement mapping, self-shadowing and silhouette processing are also reviewed. Based on our experiences gained having reimplemented these methods, their performance and quality are compared, and the advantages and disadvantages are fairly presented.},
year = {2008}
}

@inproceedings{ssdm,
author = {Lee, Aaron and Moreton, Henry and Hoppe, Hugues},
title = {Displaced Subdivision Surfaces},
year = {2000},
isbn = {1581132085},
publisher = {ACM Press/Addison-Wesley Publishing Co.},
address = {USA},
url = {https://doi.org/10.1145/344779.344829},
doi = {10.1145/344779.344829},
abstract = {In this paper we introduce a new surface representing, the displaced subdivision surface. It represents a detailed surface model as a scalar-valued displacement over a smooth domain surface. Our representation defines both the domain surface and the displacement function using a unified subdivision framework, allowing for simple and efficient evaluation of analytic surface properties. We present a simple, automatic scheme for converting detailed geometric models into such a representation. The challenge in this conversion process is to find a simple subdivision surface that still faithfully expresses the detailed model as its offset. We demonstrate that displaced subdivision surfaces offer a number of benefits, including geometry compression, editing, animation, scalability, and adaptive rendering. In particular, the encoding of fine detail as a scalar function makes the representation extremely compact.},
booktitle = {Proceedings of the 27th Annual Conference on Computer Graphics and Interactive Techniques},
pages = {85–94},
numpages = {10},
keywords = {displacement maps, geometry compression, multiresolution editing, multiresolution geometry, animation, bump maps},
series = {SIGGRAPH '00}
}

@article{dijkstra,
author = {Dijkstra, E. W.},
title = {A Note on Two Problems in Connexion with Graphs},
year = {1959},
issue_date = {December  1959},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
volume = {1},
number = {1},
issn = {0029-599X},
url = {https://doi.org/10.1007/BF01386390},
doi = {10.1007/BF01386390},
journal = {Numer. Math.},
month = dec,
pages = {269–271},
numpages = {3}
}

@ARTICLE{astar,  author={Hart, Peter E. and Nilsson, Nils J. and Raphael, Bertram},  journal={IEEE Transactions on Systems Science and Cybernetics},   title={A Formal Basis for the Heuristic Determination of Minimum Cost Paths},   year={1968},  volume={4},  number={2},  pages={100-107},  doi={10.1109/TSSC.1968.300136}}

@article{wang2004image,
  title={Image quality assessment: from error visibility to structural similarity},
  author={Wang, Zhou and Bovik, Alan C and Sheikh, Hamid R and Simoncelli, Eero P},
  journal={IEEE transactions on image processing},
  volume={13},
  number={4},
  pages={600--612},
  year={2004},
  publisher={IEEE}
}

@article{frustum_culling,
author = { Ulf   Assarsson  and  Tomas   Moller },
title = {Optimized View Frustum Culling Algorithms for Bounding Boxes},
journal = {Journal of Graphics Tools},
volume = {5},
number = {1},
pages = {9-22},
year  = {2000},
publisher = {Taylor & Francis},
doi = {10.1080/10867651.2000.10487517},

URL = { 
        https://doi.org/10.1080/10867651.2000.10487517
    
},
eprint = { 
        https://doi.org/10.1080/10867651.2000.10487517
    
}

}

@inproceedings{coorg1997real,
  title={Real-time occlusion culling for models with large occluders},
  author={Coorg, Satyan and Teller, Seth},
  booktitle={Proceedings of the 1997 symposium on Interactive 3D graphics},
  pages={83--ff},
  year={1997}
}
